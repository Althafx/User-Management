    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Admin Dashboard</title>
        <!-- Bootstrap CSS -->
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
        <style>
            body {
                background: linear-gradient(180deg,  hsl(0, 0%, 0%), #ac7003);
                min-height: 100vh;
                margin: 0;
                font-family: Arial, sans-serif;
               
                
            }
            .navbar {
                background-color: #000000;
            }
            .navbar-brand {
                color: white;
                font-weight: bold;
            }
            .navbar-brand:hover {
                color: #dd9700;
            }
            .container {
                margin-top: 30px;
            }
            .search{
               background:rgba(0, 0, 0, 0.2);
               
            }
            .search::placeholder {
            color: rgb(255, 255, 255);
            }

            h1 {
                color: white;
                text-align: center;
                margin-bottom: 20px;
            }
            .table {
                background:rgba(0, 0, 0, 0.2);
                border-radius: 10px;
                overflow: hidden;
                box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
            }
            .table th {
                background: hsl(0, 0%, 0%);
                color: white;
            }
            .table td {
                vertical-align: middle;
            }

            .logout-btn {
            background:  hsl(34, 95%, 39%);
            color: white;
            border: none;
            padding: 5px 10px;
            border-radius: 5px;
            cursor: pointer;
            transition: 0.3s;
            margin-right: 130px;
            }
            .logout-btn:hover {
            background: #fab433;
            }
            tr{
                color: white;
            }
 
        </style>
    </head>
    
    <body>
        <nav class="navbar navbar-expand-lg">
            <div class="container">
                <a class="navbar-brand" href="#">Admin Dashboard</a>
            </div>
                        <form action="/logout" method="GET" style="margin: 0;">
                <button type="submit" class="logout-btn">Logout</button>

                
            </form>
        </nav>
        <div class="container">
            <h1>Manage Users</h1>
          <!-- Table for Users -->
<table class="table">
    <div class="input-group mb-3">
    <input
        type="text"
        id="searchInput"
        class="form-control  search"
        placeholder="Search by Username, Email, or Phone"
        onkeyup="filterUsers()"
    />
</div>

    <thead>
        <tr>
            <th>#</th>
            <th>Username</th>
            <th>Email</th>
            <th>Phone</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        {{#if users.length}}
            {{#each users}}
            <tr>
                <td>{{@index}}</td>
                <td>{{this.username}}</td>
                <td>{{this.email}}</td>
                <td>{{this.phone}}</td>
                <td>
                    <button class="btn btn-warning btn-sm" onclick="editUser('{{this._id}}')">Edit</button>
                    <button class="btn btn-danger btn-sm" onclick="deleteUser('{{this._id}}')">Delete</button>
                </td>
            </tr>
            {{/each}}
        {{else}}
            <tr>
                <td colspan="5" class="text-center">No users found</td>
            </tr>
        {{/if}}
    </tbody>
</table>
        {{#if error}}
        <p style="color: red;">{{error}}</p>
        {{/if}}

<!-- Add User Button -->
<button type="button" class="btn btn-dark" data-bs-toggle="modal" data-bs-target="#addUserModal">
    Add User
</button>

<!-- Add User Modal -->
<div class="modal fade" id="addUserModal" tabindex="-1" aria-labelledby="addUserModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form action="/adduser" method="POST">
                <div class="modal-header">
                    <h5 class="modal-title" id="addUserModalLabel">Add User</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="username" class="form-label">Username</label>
                        <input type="text" name="username" id="username" placeholder="Username" required class="form-control" />
                    </div>
                    <div class="mb-3">
                        <label for="email" class="form-label">Email</label>
                        <input type="email" name="email" id="email" placeholder="Email" required class="form-control" />
                    </div>
                    <div class="mb-3">
                        <label for="phone" class="form-label">Phone</label>
                        <input type="text" name="phone" id="phone" placeholder="Phone" required class="form-control" />
                    </div>
                    <div class="mb-3">
                        <label for="password" class="form-label">Password</label>
                        <input type="password" name="password" id="password" placeholder="Password" required class="form-control" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-warning">Add User</button>
                    <button type="button" class="btn btn-dark" data-bs-dismiss="modal">Cancel</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Edit User Modal -->
<div class="modal fade" id="editUserModal" tabindex="-1" aria-labelledby="editUserModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="editUserForm">
                <div class="modal-header">
                    <h5 class="modal-title" id="editUserModalLabel">Edit User</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label for="editUsername" class="form-label">Username</label>
                        <input type="text" id="editUsername" name="username" class="form-control" required />
                    </div>
                    <div class="mb-3">
                        <label for="editEmail" class="form-label">Email</label>
                        <input type="email" id="editEmail" name="email" class="form-control" required />
                    </div>
                    <div class="mb-3">
                        <label for="editPhone" class="form-label">Phone</label>
                        <input type="text" id="editPhone" name="phone" class="form-control" required />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-warning">Save Changes</button>
                    <button type="button" class="btn btn-dark" data-bs-dismiss="modal">Cancel</button>
                </div>
            </form>
        </div>
    </div>
</div>




<script>
    // Delete User Function
    async function deleteUser(userId) {
        if (confirm("Are you sure you want to delete this user?")) {
            try {
                const response = await fetch(`/admin/deleteUser/${userId}`, {
                    method: 'DELETE',
                    
                });
                location.reload()

               
            } catch (err) {
                console.error(err);
                alert("An error occurred while deleting the user.");
                
            }
        }
    }



    //edit
    
    async function editUser(userId) {
        try {
            // Fetch user data from the server
            const response = await fetch(`/admin/getUser/${userId}`);
            const user = await response.json();

            // Populate the modal fields with user data
            document.getElementById('editUsername').value = user.username;
            document.getElementById('editEmail').value = user.email;
            document.getElementById('editPhone').value = user.phone;

            // Store the user ID in the form for later use
            document.getElementById('editUserForm').dataset.userId = userId;

            // Show the modal
            const editModal = new bootstrap.Modal(document.getElementById('editUserModal'));
            editModal.show();
        } catch (error) {
            console.error('Error fetching user data:', error);
            alert('Could not fetch user details. Please try again.');
        }
    }

    // Handle form submission to update user
    document.getElementById('editUserForm').addEventListener('submit', async function (event) {
        event.preventDefault();
        const userId = this.dataset.userId;

        const updatedData = {
            username: document.getElementById('editUsername').value,
            email: document.getElementById('editEmail').value,
            phone: document.getElementById('editPhone').value,
        };

        try {
            const response = await fetch(`/admin/editUser/${userId}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(updatedData),
            });

            if (response.ok) {
                alert('User updated successfully!');
                location.reload();
            } else {
                alert('Failed to update user. Please try again.');
            }
        } catch (error) {
            console.error('Error updating user:', error);
            alert('An error occurred. Please try again.');
        }
    });





//search

async function filterUsers() {
    const query = document.getElementById('searchInput').value;

    try {
        const response = await fetch(`/search?query=${query}`);
        const users = await response.json();

        // Clear the table body
        const tableBody = document.querySelector('table tbody');
        tableBody.innerHTML = '';

        if (users.length) {
            users.forEach((user, index) => {
                const row = `
                    <tr>
                        <td>${index + 1}</td>
                        <td>${user.username}</td>
                        <td>${user.email}</td>
                        <td>${user.phone}</td>
                        <td>
                            <button class="btn btn-warning btn-sm" onclick="editUser('${user._id}')">Edit</button>
                            <button class="btn btn-danger btn-sm" onclick="deleteUser('${user._id}')">Delete</button>
                        </td>
                    </tr>
                `;
                tableBody.innerHTML += row;
            });
        } else {
            tableBody.innerHTML = `
                <tr>
                    <td colspan="5" class="text-center">No users found</td>
                </tr>
            `;
        }
    } catch (error) {
        console.error('Error fetching search results:', error);
    }
}


    
</script>




        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    </body>
    </html>
